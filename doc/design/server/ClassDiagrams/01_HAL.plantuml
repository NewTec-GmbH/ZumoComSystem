@startuml
package HAL
{
    package "Arduino Core"
    {
        class "Digital I/O" as ArduinoIO
    }

    class IO
    {
        - ioMutex: SemaphoreHandle_t
        {static} - DEBOUNCE_DELAY_TIME: uint8_t {readonly} = 50
        - IO()
        - ~IO()
        + {static} getInstance(): IO&
        + readGPIODebounced(gpio: uint8_t): uint8_t
        + readGPIO(gpio: uint8_t): uint8_t
        + writeGPIO(gpio: uint8_t, value: uint8_t): void
    }
    IO  ..> ArduinoIO : uses

    class Key
    {
        {static} - WIFI_AND_RESET_KEY_PIN: uint8_t {readonly} = 0
        {static} - LONG_PRESS_TIME: uint32_t {readonly}  = 1000
        - Key()
        - ~Key()
        {static} + getInstance(): Key&
        + blockingCheckWiFiKeyLongPress(): bool
        + registerSystemReset(): void
        - {static} systemResetISR(): void
    }
    Key ..> IO : uses

    class Robot
    {
        {static} - ROBOT_RESET_PIN: uint8_t {readonly} = 2
        {static} - ROBOT_RESET_TIME: uint32_t {readonly} = 500
        - Robot()
        - ~Robot()
        {static} + getInstance(): Robot&
        + resetRobotNow(): void
    }
    Robot ..> IO : uses
}
@enduml