@startuml
package SystemServices {
    enum LogLevel
    {
        LEVEL_DEBUG
        LEVEL_INFO
        LEVEL_WARN
        LEVEL_ERROR
    }

    class Log
    {
        - m_LogLevel : LogLevel = DEBUG

        - Log()
        - ~Log()
        {static} + getInstance(): Log&
        + getLogLevel(): LogLevel
        + setLogLevel(level: LogLevel): void
        + writeLog(level: LogLevel, msg: const char*): void
    }
    Log "0..*" *--> "1" LogLevel

    class NVSManager
    {
        - m_preferences: Preferences

        + NVSManager()
        + ~NVSManager()
        + createEntry(key: String, value: String): bool
        + deleteEntry(key: String): bool
        + updateEntry(key: String, value: String): bool
        + readEntry(key: String): String
        + wipeNVS(): bool
    }

    class APCredentials
    {
        {static} + AP_SSID: String {readonly} = "ComPlatform"
        {static} + AP_PSK: String {readonly} = "XXXXXXXX"
    }

    class WiFiManager
    {
        - m_store: Store&
        {static} - HOSTNAME: String {readonly} = "complatform.local"
        + WiFiManager()
        + ~WiFiManager()
        + startAP(): bool
        + stopAP(): bool
        + startSTA(): bool
        + stopSTA(): bool
    }
    WiFiManager ..> APCredentials : uses

    class System
    {
        - m_wifiManager: WiFiManager&
        - m_store: Store&
        - m_webServer: WebServer&
        - System()
        - ~System()
        + {static} getInstance(): System&
        + init(): bool
        + reset(): void
    }
    System ..> WiFiManager : uses
}
@enduml