@startuml
class ApiRequest
{
    - commandId: String
    - jsonPayload: String
    + ApiRequest()
    + setCommandID(commandId: String): void
    + setJSONPayload(payload: String): void
    + serialize(): String
}

class ApiResponse
{
    - statusCode: number
    - jsonPayload: String
    + ApiResponse()
    + getStatusCode(): number
    + getJSONPayload(): String
}

class UserCredentials
{
    - m_username: String
    - m_password: String
    + UserCredentials()
    + setUsername(username: String): void
    + setPassword(password: String): void
    + serialize(): String
}

class NetworkCredentials
{
    - m_ssid: String
    - m_passphrase: String
    + NetworkCredentials()
    + setSSID(ssid: String): void
    + setPassphrase(passphrase: String): void
    + serialize(): String
}

class CPSFW
{
    - m_id: number
    - m_target: String
    - m_version: number
    - m_hashAlg: String
    - m_signAlg: String
    - m_signature: Uint8Array
    - m_payload: Uint8Array
    + CPSFW()
    + getTarget(): String
    + setTarget(target: String): boolean
    + getHashAlg(): String
    + setHashAlg(alg: String): boolean
    + getSignAlg(): String
    + setSignAlg(alg: String): boolean
    + getSignature(): Uint8Array
    + setSignature(signature: Uint8Array): boolean
    + getFirmware(): Uint8Array
    + setFirmware(firmware: Uint8Array): void
    + deserialize(serial: Uint8Array): boolean
    + serialize(): Uint8Array
}

class LogEntry
{
    - logLine: String
    + LogEntry()
}

class FirmwareInfo
{
    - targetSystem
    - sizeBytes
    - payloadHash
    - isValid
    + FirmwareInfo()
}
@enduml
